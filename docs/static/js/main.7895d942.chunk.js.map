{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","hooks/useFetchGifs.js","components/GifGirdItem.js","components/GifGrid.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","category","setCategory","onSubmit","e","preventDefault","cat","type","value","onChange","target","getGifs","a","url","encodeURI","fetch","resp","json","data","gif","map","img","id","title","images","downsized_medium","useFetchGifs","loading","state","setState","useEffect","then","imgs","GifGirdItem","className","src","alt","GifGrid","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"6MA6CeA,EA1CK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEPC,mBAAS,IAFF,mBAEhCC,EAFgC,KAEtBC,EAFsB,KA2BvC,OACI,0BAAMC,SAlBW,SAACC,GAElBA,EAAEC,iBAEc,KAAbJ,GAECF,GAAc,SAAAO,GAAG,OACbL,GADa,mBAEVK,OAKXJ,EAAY,MAMR,2BACIK,KAAK,OACLC,MAAQP,EACRQ,SA5Ba,SAACL,GAEtBF,EAAYE,EAAEM,OAAOF,Y,uBCRhBG,EAAO,uCAAG,WAAQV,GAAR,uBAAAW,EAAA,4DAEH,mCACF,GAERC,EALa,uDAEH,mCAFG,cAKsDC,UAAUb,GALhE,kBAGL,IAHK,SAOAc,MAAMF,GAPN,cAObG,EAPa,gBAQIA,EAAKC,OART,uBAQXC,EARW,EAQXA,KAEFC,EAAMD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACxB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAdvB,kBAkBZM,GAlBY,4CAAH,sDC0BLO,EAxBM,SAACzB,GAAc,IAAD,EAELD,mBAAS,CAC/BkB,KAAM,GACNS,SAAS,IAJkB,mBAExBC,EAFwB,KAEjBC,EAFiB,KAoB/B,OAbAC,qBAAW,WAEPnB,EAAQV,GAAU8B,MAAM,SAAAC,GAEpBH,EAAS,CACLX,KAAMc,EACNL,SAAS,SAKlB,CAAE1B,IAEE2B,GCrBEK,EAAc,SAAC,GAAyB,EAAtBX,GAAuB,IAAnBC,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAGtC,OACI,yBAAKqB,UAAU,0CACX,yBAAKC,IAAMtB,EAAMuB,IAAMb,IACvB,2BAAKA,KC6BFc,EAjCC,SAAC,GAAkB,IAAhBpC,EAAe,EAAfA,SAAe,EAQGyB,EAAazB,GAAjCuB,EARiB,EAQtBN,KAAaS,EARS,EAQTA,QAGrB,OAEI,oCACI,wBAAIO,UAAU,qCAAsCjC,GAClD0B,GAAW,uBAAGO,UAAU,oCAAb,eAEb,yBAAKA,UAAU,aAEHV,EAAOJ,KAAK,SAACC,GACT,OACI,kBAAC,EAAD,eACIiB,IAAMjB,EAAIC,IACLD,UCS1BkB,EAhCM,WAAO,IAAD,EAEavC,mBAAS,CACzC,2BAHmB,mBAEhBwC,EAFgB,KAEJzC,EAFI,KAMvB,OAEI,oCACI,4CAEA,kBAAC,EAAD,CACIA,cAAgBA,IAGpB,6BAGIyC,EAAWpB,KAAK,SAACnB,GACb,OACI,kBAAC,EAAD,CACIA,SAAUA,EACVqC,IAAKrC,SCpBjCwC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.7895d942.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst AddCategory = ({ setCategories }) => {\n    \n    const [category, setCategory] = useState('');\n\n    const handleInputValue = (e) => {\n\n        setCategory(e.target.value);\n\n    }\n\n    const handleSubmit = (e) => {\n\n        e.preventDefault();\n\n        if(category !== '') {\n            \n            setCategories(cat => [\n                category,\n                ...cat,\n            ]);\n\n        }\n\n        setCategory('');\n\n    }\n\n    return (\n        <form onSubmit={ handleSubmit }>\n            <input \n                type=\"text\"\n                value={ category }\n                onChange={ handleInputValue }\n            />\n        </form>\n    );\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired,\n}\n \nexport default AddCategory;","\nexport const getGifs = async ( category ) => {\n        \n    const api_key = 'kWMBYZ4EoLxcWaVx2aU732gEO4Dsjzan';\n    const limit = 10;\n\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=${api_key}&q=${encodeURI(category)}&limit=${limit}`;\n\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n\n    const gif = data.map(img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url,\n        }\n    });\n\n    return gif;\n\n}","import { useState, useEffect } from \"react\";\nimport { getGifs } from '../helpers/getGifs';\n\nconst useFetchGifs = (category) => {\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true,\n    })\n\n    useEffect( () => {\n\n        getGifs(category).then( imgs => {\n\n            setState({\n                data: imgs,\n                loading: false,\n            });\n\n        } );\n\n    }, [ category ] );\n\n    return state;\n\n}\n \nexport default useFetchGifs;","import React from 'react'\n\nexport const GifGirdItem = ( { id, title, url } ) => {\n\n    // console.log(props);\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={ url } alt={ title }/>\n            <p>{ title }</p>\n        </div>\n    )\n}\n","import React from 'react';\nimport useFetchGifs from '../hooks/useFetchGifs';\nimport { GifGirdItem } from './GifGirdItem';\n\nconst GifGrid = ({ category }) => {\n    \n    // const [images, setImages] = useState([]);\n\n    // useEffect( () => {\n    //     getGifs(category).then( setImages );\n    // }, [category]);\n\n    const { data:images, loading } = useFetchGifs(category);\n\n\n    return (\n\n        <>\n            <h2 className=\"animate__animated animate__fadeIn\">{ category }</h2>\n            { loading && <p className=\"animate__animated animate__flash\">Cargando...</p> }\n\n            <div className=\"card-grid\">\n                    { \n                        images.map( (img) => {\n                            return (\n                                <GifGirdItem \n                                    key={ img.id }\n                                    { ...img }\n                                />\n                            );\n                        } ) \n                    }\n            </div>\n        </>\n    );\n}\n \nexport default GifGrid;","import React, { useState } from 'react';\nimport AddCategory from './components/AddCategory';\nimport GifGrid from './components/GifGrid';\n\nconst GifExpertApp = () => {\n    \n    const [categories, setCategories] = useState([\n        'Caballeros del zodiaco',\n    ]);\n\n    return (\n\n        <>\n            <h2>GifExpertApp</h2>\n\n            <AddCategory \n                setCategories={ setCategories }\n            />\n\n            <hr/>\n    \n            {\n                categories.map( (category) => {\n                    return (\n                        <GifGrid \n                            category={category}\n                            key={category}\n                        />\n                    );\n                } )\n            }\n        </>\n\n    );\n}\n \nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}